{"version":3,"sources":["pages/Page.module.scss","layout/HeaderUserAction.tsx","context/DocTree.tsx","layout/Sider.tsx","components/MultiLineSkeleton.tsx","pages/DocPage.tsx","pages/Page.tsx","App.tsx","utils/useGapi.tsx","index.tsx","layout/Sider.module.scss"],"names":["module","exports","HeaderUserAction","useState","gapi","auth2","getAuthInstance","isSignedIn","get","setIsSignedIn","useBus","data","payload","signedIn","profile","useMemo","currentUser","getBasicProfile","handleSignIn","useCallback","signIn","handleSignOut","signOut","HeaderGlobalAction","aria-label","onClick","name","getName","src","getImageUrl","size","round","React","memo","RootDriveId","Ctx","createContext","loading","DocTreeProvider","children","setData","loadTreeData","a","currentData","client","drive","files","list","corpora","driveId","includeItemsFromAllDrives","supportsAllDrives","pageSize","q","fields","resp","console","log","itemsWithChildren","result","map","file","itemsByParent","allItems","forEach","parents","length","undefined","push","id","dataFlat","useMount","Provider","value","useDocTree","useContext","dummy","renderTree","nodes","expanded","isExpanded","nodeProps","onToggle","mapDocTreeItem","node","optionalChildren","mimeType","label","Sider","treeData","history","useHistory","handleSelect","_ev","className","cx","styles","sider","skeleton","SkeletonText","paragraph","selected","onSelect","Content_","content","Content","MultiLineSkeleton","heading","lineCount","DocPage","docContent","setDocContent","isLoading","setIsLoading","useEffect","export","fileId","parser","DOMParser","htmlDoc","parseFromString","body","bodyEl","querySelector","querySelectorAll","el","appendChild","innerHTML","loadPreview","style","marginBottom","Stack","tokens","childrenGap","verticalAlign","horizontal","lastModifyingUser","displayName","photoLink","dayjs","modifiedTime","fromNow","dangerouslySetInnerHTML","__html","extend","relativeTime","ErrorDisplay","error","kind","subtitle","marginTop","getEmail","title","message","hideCloseButton","actions","Notification","_getCustomDivider","dividerProps","_getCustomOverflowIcon","Page","useParams","setFile","setError","docTree","respFile","Error","loadFileMetadata","filePath","paths","iterateId","currentItem","text","key","reverse","contentNode","contentContainer","Breadcrumb","items","dividerAs","onRenderOverflowIcon","App","gapiLoaded","isLoaded","setIsLoaded","initClient","dispatchSignedIn","dispatch","type","init","apiKey","clientId","discoveryDocs","scope","listen","load","useGapi","setIsExpanded","handleOpenTOC","handleCloseTOC","Header","HeaderName","href","prefix","HeaderGlobalBar","path","InlineLoading","description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0962c9a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"Page_contentContainer__1L1CU\"};","import { UserAvatar20 } from '@carbon/icons-react';\nimport { HeaderGlobalAction } from 'carbon-components-react';\nimport Avatar from 'react-avatar';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport useBus from 'use-bus';\n\nfunction HeaderUserAction() {\n  const [isSignedIn, setIsSignedIn] = useState(gapi.auth2.getAuthInstance().isSignedIn.get());\n\n  useBus(\n    'gSignedInChange',\n    (data) => {\n      setIsSignedIn(data.payload.signedIn);\n    },\n    []\n  );\n\n  const profile = useMemo(() => {\n    if (isSignedIn) {\n      return gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\n    } else {\n      return null;\n    }\n  }, [isSignedIn]);\n\n  const handleSignIn = useCallback(() => {\n    gapi.auth2.getAuthInstance().signIn();\n  }, []);\n\n  const handleSignOut = useCallback(() => {\n    gapi.auth2.getAuthInstance().signOut();\n  }, []);\n\n  if (!isSignedIn) {\n    return (\n      <HeaderGlobalAction aria-label=\"Sign In\" onClick={handleSignIn}>\n        <UserAvatar20 />\n      </HeaderGlobalAction>\n    );\n  } else {\n    return (\n      <HeaderGlobalAction aria-label=\"Sign Out\" onClick={handleSignOut}>\n        <Avatar name={profile!.getName()} src={profile!.getImageUrl()} size=\"30\" round />\n      </HeaderGlobalAction>\n    );\n  }\n}\n\nexport default React.memo(HeaderUserAction);\n","import { useMount } from 'ahooks';\nimport React, { useCallback, useContext, useState } from 'react';\n\nconst RootDriveId = '0AIURj86T5hpoUk9PVA';\n\nexport interface IDocTree {\n  loading: boolean;\n  // All items, in tree form\n  data?: IDocTreeItem[];\n  // All items, in flat form\n  dataFlat?: Record<string, IDocTreeItem>;\n}\n\nexport interface IDocTreeItem extends gapi.client.drive.File {\n  children: IDocTreeItem[];\n}\n\nconst Ctx = React.createContext<IDocTree>({ loading: true });\n\nexport function DocTreeProvider({ children }) {\n  const [data, setData] = useState<IDocTree>({ loading: true });\n\n  const loadTreeData = useCallback(async () => {\n    setData((currentData) => ({ ...currentData, loading: true }));\n\n    try {\n      // FIXME: Support pagination\n      const resp = await gapi.client.drive.files.list({\n        corpora: 'drive',\n        driveId: RootDriveId,\n        includeItemsFromAllDrives: true,\n        supportsAllDrives: true,\n        pageSize: 500,\n        q: 'trashed = false',\n        fields:\n          'nextPageToken, files(name, id, parents, mimeType, modifiedTime, lastModifyingUser(displayName, photoLink))',\n      });\n      console.log('files.list', RootDriveId, resp);\n\n      const itemsWithChildren: IDocTreeItem[] =\n        resp.result.files?.map((file) => {\n          return {\n            ...file,\n            children: [],\n          };\n        }) ?? [];\n      const itemsByParent: Record<string, IDocTreeItem[]> = {};\n      const allItems: Record<string, IDocTreeItem> = {};\n\n      itemsWithChildren.forEach((file) => {\n        if ((file.parents?.length ?? 0) === 0) {\n          console.log('File does not have parents', file);\n          return;\n        }\n        if (itemsByParent[file.parents![0]] === undefined) {\n          itemsByParent[file.parents![0]] = [];\n        }\n        itemsByParent[file.parents![0]].push(file);\n      });\n\n      itemsWithChildren?.forEach((file) => {\n        file.children = itemsByParent[file.id ?? ''] ?? [];\n      });\n\n      itemsWithChildren?.forEach((file) => {\n        allItems[file.id ?? ''] = file;\n      });\n\n      setData((currentData) => ({\n        ...currentData,\n        data: itemsByParent[RootDriveId] ?? [],\n        dataFlat: allItems,\n      }));\n    } finally {\n      setData((currentData) => ({ ...currentData, loading: false }));\n    }\n  }, []);\n\n  useMount(() => {\n    // Only load tree data once when webpage is loaded. There is no need to reload\n    // in other scenarios.\n    loadTreeData();\n  });\n\n  return <Ctx.Provider value={data}>{children}</Ctx.Provider>;\n}\n\nexport function useDocTree() {\n  return useContext(Ctx);\n}\n","import { SkeletonText } from 'carbon-components-react';\nimport TreeView, { TreeNode } from 'carbon-components-react/lib/components/TreeView';\nimport React, { useCallback, useMemo } from 'react';\nimport { IDocTreeItem, useDocTree } from '../context/DocTree';\nimport { useHistory } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport styles from './Sider.module.scss';\n\ninterface INavItemProps {\n  id: string;\n  value?: any;\n  label?: React.ReactNode;\n  children?: INavItemProps[];\n  isExpanded?: boolean;\n}\n\nfunction dummy() {}\n\nfunction renderTree(nodes?: INavItemProps[], expanded?: boolean) {\n  if (!nodes) {\n    return;\n  }\n  return nodes.map(({ children, isExpanded, ...nodeProps }) => (\n    <TreeNode\n      key={nodeProps.id}\n      isExpanded={expanded ?? isExpanded}\n      onToggle={dummy}\n      {...nodeProps}\n    >\n      {renderTree(children, expanded)}\n    </TreeNode>\n  ));\n}\n\nfunction mapDocTreeItem(nodes?: IDocTreeItem[]): INavItemProps[] {\n  return (nodes ?? [])?.map((node) => {\n    const optionalChildren: any = {};\n    if (node.mimeType === 'application/vnd.google-apps.folder') {\n      // Always assign a children field when it is a folder.\n      // This results in a triangle icon in the sidebar.\n      optionalChildren.children = mapDocTreeItem(node.children);\n    }\n    return {\n      id: node.id,\n      label: node.name,\n      value: node,\n      ...optionalChildren,\n    } as INavItemProps;\n  });\n}\n\nfunction Sider({ isExpanded = true }: { isExpanded?: boolean }) {\n  const { loading, data } = useDocTree();\n  const treeData = useMemo(() => mapDocTreeItem(data), [data]);\n\n  const history = useHistory();\n\n  const handleSelect = useCallback((_ev, node) => {\n    const file = node.value as IDocTreeItem;\n    history.push(`/view/${file.id}`);\n  }, []);\n\n  return (\n    <div className={cx(styles.sider, { [styles.isExpanded]: isExpanded })}>\n      {loading && (\n        <div className={styles.skeleton}>\n          <SkeletonText paragraph />\n        </div>\n      )}\n      {!loading && (\n        <TreeView label=\"Table of Content\" selected={[]} onSelect={handleSelect}>\n          {renderTree(treeData, false)}\n        </TreeView>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(Sider);\n\nfunction Content_({\n  isExpanded = true,\n  children,\n}: {\n  isExpanded?: boolean;\n  children?: React.ReactNode;\n}) {\n  return <div className={cx(styles.content, { [styles.isExpanded]: isExpanded })}>{children}</div>;\n}\n\nexport const Content = React.memo(Content_);\n","import { SkeletonText } from 'carbon-components-react';\nimport React from 'react';\n\nexport default function MultiLineSkeleton() {\n  return (\n    <div>\n      <SkeletonText heading />\n      <SkeletonText paragraph lineCount={10} />\n    </div>\n  );\n}\n","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport React, { useEffect, useState } from 'react';\nimport Avatar from 'react-avatar';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { MultiLineSkeleton } from '../components';\n\ndayjs.extend(relativeTime);\n\nexport interface IDocPageProps {\n  file: gapi.client.drive.File;\n}\n\nexport default function DocPage({ file }: IDocPageProps) {\n  const [docContent, setDocContent] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function loadPreview() {\n      setIsLoading(true);\n      setDocContent('');\n\n      try {\n        const resp = await gapi.client.drive.files.export({\n          fileId: file.id!,\n          mimeType: 'text/html',\n        });\n        console.log('files.export', file.id, resp);\n\n        const parser = new DOMParser();\n        const htmlDoc = parser.parseFromString(resp.body, 'text/html');\n        const bodyEl = htmlDoc.querySelector('body');\n        if (bodyEl) {\n          const styleEls = htmlDoc.querySelectorAll('style');\n          styleEls.forEach((el) => bodyEl.appendChild(el));\n          setDocContent(bodyEl.innerHTML);\n        } else {\n          setDocContent('Error?');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadPreview();\n  }, [file.id]);\n\n  return (\n    <div>\n      <div style={{ marginBottom: 32 }}>\n        <Stack tokens={{ childrenGap: 16 }}>\n          {/* <h1>{file.name}</h1> */}\n          <Stack verticalAlign=\"center\" horizontal tokens={{ childrenGap: 16 }}>\n            <Avatar\n              name={file.lastModifyingUser?.displayName}\n              src={file.lastModifyingUser?.photoLink}\n              size=\"20\"\n              round\n            />\n            <span>\n              Last modified by {file.lastModifyingUser?.displayName}{' '}\n              {dayjs(file.modifiedTime).fromNow()}\n            </span>\n          </Stack>\n        </Stack>\n      </div>\n      {isLoading && <MultiLineSkeleton />}\n      {!isLoading && <div dangerouslySetInnerHTML={{ __html: docContent }}></div>}\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MultiLineSkeleton } from '../components';\nimport { useDocTree } from '../context/DocTree';\nimport DocPage from './DocPage';\nimport { InlineNotification, NotificationActionButton } from 'carbon-components-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport {\n  Breadcrumb,\n  IBreadcrumbItem,\n  IDividerAsProps,\n} from 'office-ui-fabric-react/lib/Breadcrumb';\nimport { ChevronRight20, OverflowMenuHorizontal20 } from '@carbon/icons-react';\nimport { useHistory } from 'react-router-dom';\n\nimport styles from './Page.module.scss';\n\nfunction ErrorDisplay({ error }) {\n  const handleSignIn = useCallback(() => {\n    gapi.auth2.getAuthInstance().signIn();\n  }, []);\n\n  if (gapi.auth2.getAuthInstance().isSignedIn.get()) {\n    return (\n      <InlineNotification\n        kind=\"error\"\n        subtitle={\n          <Stack tokens={{ childrenGap: 8 }} style={{ marginTop: 8 }}>\n            <div>\n              You are signed in with{' '}\n              {gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail()}.\n            </div>\n            <div>Are you using the incorrect Google account, or typing a wrong URL?</div>\n          </Stack>\n        }\n        title={`Failed to load content: ${error.message}`}\n        hideCloseButton\n      />\n    );\n  } else {\n    return (\n      <InlineNotification\n        kind=\"error\"\n        actions={\n          <NotificationActionButton onClick={handleSignIn}>Sign In</NotificationActionButton>\n        }\n        subtitle={<div style={{ marginTop: 8 }}>You may need to sign-in to view the content.</div>}\n        title={`Failed to load content: ${error.message}`}\n        hideCloseButton\n      />\n    );\n  }\n}\n\nfunction _getCustomDivider(dividerProps: IDividerAsProps): JSX.Element {\n  return <ChevronRight20 />;\n}\n\nfunction _getCustomOverflowIcon(): JSX.Element {\n  return (\n    <div>\n      <OverflowMenuHorizontal20 />\n    </div>\n  );\n}\n\nexport default function Page() {\n  const { id } = useParams();\n  const [file, setFile] = useState<gapi.client.drive.File | undefined>(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<any>(null);\n  const history = useHistory();\n\n  const docTree = useDocTree();\n\n  useEffect(() => {\n    async function loadFileMetadata() {\n      setIsLoading(true);\n      setError(null);\n      setFile(undefined);\n\n      try {\n        const respFile = await gapi.client.drive.files.get({\n          supportsAllDrives: true,\n          fileId: id,\n          fields: '*',\n        });\n        console.log('files.get', id, respFile);\n        setFile(respFile.result);\n      } catch (e) {\n        if (e?.result?.error) {\n          setError(e.result.error);\n        } else if (e.message) {\n          setError(e);\n        } else {\n          console.log(e);\n          setError(new Error('Unknown error'));\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (docTree.dataFlat?.[id] === undefined) {\n      // This may happen when:\n      // 1. User refresh the page, so that tree has not been loaded\n      // 2. User clicks a doc which is out of the tree\n      loadFileMetadata();\n    } else {\n      // If file is in the tree, and tree is already loaded, use that data directly.\n      setIsLoading(false);\n      setError(null);\n      setFile(docTree.dataFlat[id]);\n    }\n  }, [id]);\n\n  // Build a breadcumb according to loaded tree data.\n  const filePath = useMemo(() => {\n    const paths: IBreadcrumbItem[] = [];\n\n    if (!file?.id) {\n      return paths;\n    }\n\n    let iterateId = file.id;\n\n    while (iterateId) {\n      const currentItem = docTree.dataFlat?.[iterateId];\n      if (!currentItem) {\n        break;\n      }\n      if (!currentItem.name || !currentItem.id) {\n        break;\n      }\n      // if (iterateId !== id) {\n      paths.push({\n        text: currentItem.name,\n        key: currentItem.id,\n        onClick: () => history.push(`/view/${currentItem.id}`),\n      });\n      // }\n      if (!currentItem.parents) {\n        break;\n      }\n      iterateId = currentItem.parents[0];\n    }\n\n    paths.push({\n      text: 'Wiki Root',\n      key: 'root',\n      onClick: () => history.push(`/`),\n    });\n\n    return paths.reverse();\n  }, [docTree.data, docTree.dataFlat, file]);\n\n  let contentNode: React.ReactNode = null;\n  if (!isLoading) {\n    switch (file?.mimeType ?? '') {\n      case 'application/vnd.google-apps.document':\n        contentNode = <DocPage file={file!} />;\n        break;\n    }\n  }\n\n  return (\n    <div className={styles.contentContainer}>\n      {filePath.length > 0 && (\n        <div style={{ marginBottom: 16 }}>\n          <Breadcrumb\n            items={filePath}\n            dividerAs={_getCustomDivider}\n            onRenderOverflowIcon={_getCustomOverflowIcon}\n          />\n        </div>\n      )}\n      {isLoading && <MultiLineSkeleton />}\n      {!isLoading && error && <ErrorDisplay error={error} />}\n      {!isLoading && contentNode}\n    </div>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport { useGapi } from './utils';\nimport {\n  Header,\n  HeaderGlobalAction,\n  HeaderGlobalBar,\n  HeaderName,\n  InlineLoading,\n} from 'carbon-components-react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Content, HeaderUserAction, Sider } from './layout';\nimport { DocTreeProvider } from './context/DocTree';\nimport { Add20, Close20, Menu20, Subtract20 } from '@carbon/icons-react';\nimport Page from './pages/Page';\n\nfunction App() {\n  const { gapiLoaded } = useGapi();\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  const handleOpenTOC = useCallback(() => setIsExpanded(true), []);\n  const handleCloseTOC = useCallback(() => setIsExpanded(false), []);\n\n  if (!gapiLoaded) {\n    return <InlineLoading description=\"Loading Google API\" />;\n  }\n\n  return (\n    <Router>\n      <DocTreeProvider>\n        <Header>\n          {!isExpanded && (\n            <HeaderGlobalAction key=\"open\" aria-label=\"Open TOC\" onClick={handleOpenTOC}>\n              <Menu20 />\n            </HeaderGlobalAction>\n          )}\n          {isExpanded && (\n            <HeaderGlobalAction key=\"close\" aria-label=\"Close TOC\" onClick={handleCloseTOC}>\n              <Close20 />\n            </HeaderGlobalAction>\n          )}\n          {isExpanded && (\n            <HeaderGlobalAction key=\"expand\" aria-label=\"Expand All\">\n              <Add20 />\n            </HeaderGlobalAction>\n          )}\n          {isExpanded && (\n            <HeaderGlobalAction key=\"collapse\" aria-label=\"Collapse All\">\n              <Subtract20 />\n            </HeaderGlobalAction>\n          )}\n          <HeaderName href=\"#\" prefix=\"Gdoc Wiki:\">\n            Home\n          </HeaderName>\n          <HeaderGlobalBar>\n            <HeaderUserAction />\n          </HeaderGlobalBar>\n          <Sider isExpanded={isExpanded} />\n        </Header>\n        <Content isExpanded={isExpanded}>\n          <Switch>\n            <Route path=\"/view/:id\">\n              <Page />\n            </Route>\n          </Switch>\n        </Content>\n      </DocTreeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useMount } from 'ahooks';\nimport { useCallback, useState } from 'react';\nimport { dispatch } from 'use-bus';\n\nexport default function useGapi() {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const initClient = useCallback(async () => {\n    try {\n      await gapi.client.init({\n        apiKey: 'AIzaSyCr53G4OrNdOpjjejsM4wStjW_Uagudq8E',\n        clientId: '814839399439-cm9t983r5374hk28v5lt5ne75i6eit6c.apps.googleusercontent.com',\n        discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\n        scope: 'https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/documents',\n      });\n    } catch (ex) {\n      console.error(ex);\n    }\n\n    function dispatchSignedIn(signedIn) {\n      dispatch({ type: 'gSignedInChange', payload: { signedIn } });\n    }\n\n    gapi.auth2.getAuthInstance().isSignedIn.listen(dispatchSignedIn);\n\n    setIsLoaded(true);\n  }, []);\n\n  useMount(() => {\n    gapi.load('client:auth2', initClient);\n  });\n\n  return {\n    gapiLoaded: isLoaded,\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './global.carbon.scss';\nimport './global.index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"Sider_sider__1kHOw\",\"isExpanded\":\"Sider_isExpanded__3omga\",\"skeleton\":\"Sider_skeleton__2FZhs\",\"content\":\"Sider_content__2toHh\"};"],"sourceRoot":""}